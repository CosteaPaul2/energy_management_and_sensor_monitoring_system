version: '3.8'  # Specify version if needed

services:
  postgres-city-db:
    image: postgres:17
    container_name: postgres-city-db
    environment:
      POSTGRES_DB: city-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5432:5432"
    volumes:
      - postgres_city_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-device-db:
    image: postgres:17
    container_name: postgres-device-db
    environment:
      POSTGRES_DB: device-db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - postgres_device_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  city-spring:
    build:
      context: ./spring-demo
      dockerfile: Dockerfile
    environment:
      DB_IP: postgres-city-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: admin
      DB_DBNAME: city-db  # Database for the first Java app
    depends_on:
      - postgres-city-db
    ports:
      - "8081:8081"

  devices-spring:
    build:
      context: ./devices
      dockerfile: Dockerfile
    environment:
      DB_IP: postgres-device-db
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: admin
      DB_DBNAME: device-db  # Database for the second Java app
    depends_on:
      - postgres-device-db
    ports:
      - "8082:8082"

  react-app:
    build:
      context: ./proiectSD-frontend
      dockerfile: Dockerfile
    environment:
      PORT: 5173
    ports:
      - "5173:5173"
    depends_on:
      - city-spring
      - devices-spring

volumes:
  postgres_city_data:
  postgres_device_data:
